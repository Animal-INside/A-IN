<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.ain.mapper.StoryCommentMapper">


    <!-- 댓글 생성 -->
    <insert id="insertComment" parameterType="com.team.ain.dto.story.StoryCommentDTO">
        INSERT INTO story_comment (
            story_id,
            member_id,
            parent_id,
            content,
            created_at,
            status
        ) VALUES (
            #{storyId},
            #{memberId},
            #{parentId},
            #{content},
            CURRENT_TIMESTAMP,
            'ACTIVE'
        )
    </insert>
    
    <!-- 스토리의 모든 댓글 조회 (대댓글 제외) -->
    <select id="findCommentsByStoryId" resultType="com.team.ain.dto.story.StoryCommentDTO">
        SELECT 
            sc.*,
            m.name as member_name,
            m.profile_picture_url,
            (
                SELECT COUNT(*) 
                FROM story_comment 
                WHERE parent_id = sc.id 
                AND status = 'ACTIVE'
            ) as reply_count
        FROM story_comment sc
        JOIN member m ON sc.member_id = m.id
        WHERE sc.story_id = #{storyId}
        AND sc.parent_id IS NULL
        AND sc.status = 'ACTIVE'
        ORDER BY sc.created_at DESC
    </select>
    
    <!-- 특정 댓글의 대댓글 조회 -->
    <select id="findRepliesByCommentId" resultType="com.team.ain.dto.story.StoryCommentDTO">
        SELECT 
            sc.*,
            m.name as member_name,
            m.profile_picture_url
        FROM story_comment sc
        JOIN member m ON sc.member_id = m.id
        WHERE sc.parent_id = #{commentId}
        AND sc.status = 'ACTIVE'
        ORDER BY sc.created_at ASC
    </select>
    
    <!-- 댓글 삭제 (상태 변경) -->
    <update id="deleteComment">
        UPDATE story_comment
        SET status = 'DELETED'
        WHERE id = #{commentId}
        AND member_id = #{memberId}
    </update>
    
    <!-- 특정 댓글 상세 조회 -->
    <select id="findCommentById" resultType="com.team.ain.dto.story.StoryCommentDTO">
        SELECT 
            sc.*,
            m.name as member_name,
            m.profile_picture_url
        FROM story_comment sc
        JOIN member m ON sc.member_id = m.id
        WHERE sc.id = #{commentId}
        AND sc.status = 'ACTIVE'
    </select>
    
    <!-- 특정 스토리의 총 댓글 수 조회 -->
    <select id="countCommentsByStoryId" resultType="int">
        SELECT COUNT(*)
        FROM story_comment
        WHERE story_id = #{storyId}
        AND status = 'ACTIVE'
    </select>
    
    <!-- 특정 댓글의 답글 수 조회 -->
    <select id="countRepliesByCommentId" resultType="int">
        SELECT COUNT(*)
        FROM story_comment
        WHERE parent_id = #{commentId}
        AND status = 'ACTIVE'
    </select>
    
    <!-- 특정 멤버의 댓글 조회 -->
    <select id="findCommentsByMemberId" resultType="com.team.ain.dto.story.StoryCommentDTO">
        SELECT 
            sc.*,
            m.name as member_name,
            m.profile_picture_url
        FROM story_comment sc
        JOIN member m ON sc.member_id = m.id
        WHERE sc.member_id = #{memberId}
        AND sc.status = 'ACTIVE'
        ORDER BY sc.created_at DESC
    </select>
</mapper>